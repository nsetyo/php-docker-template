version: "3"

services:
  database-admin:
    image: adminer:4.8.1
    environment:
      - ADMINER_DEFAULT_SERVER=database
    networks:
      - public
    depends_on:
      - database
  database:
    image: postgres:${DB_VERSION:-14}-alpine
    environment:
      - POSTGRES_DB=${DB_DATABASE:-app}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-!ChangeMe!}
      - POSTGRES_USER=${DB_USERNAME:-app}
    volumes:
      - ${DB_DATA_PATH:-./storage/database}:/var/lib/postgresql/data:rw
    ### Search Service ###########################################################
  elasticsearch-setup:
    image: elasticsearch:${ELASTIC_VERSION:-8.0.0}
    user: "0"
    command: >
      bash -c '
        if [ x${ELASTIC_PASSWORD:-!ChangeMe!} == x ]; then
          echo "Set the ELASTIC_PASSWORD environment variable in the .env file";
          exit 1;
        elif [ x${KIBANA_PASSWORD:-!ChangeMe!} == x ]; then
          echo "Set the KIBANA_PASSWORD environment variable in the .env file";
          exit 1;
        fi;
        if [[ ! -f config/certs/ca.zip ]]; then
          echo "Creating CA";
          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
          unzip config/certs/ca.zip -d config/certs;
        fi;
        if [[ ! -f config/certs/certs.zip ]]; then
          echo "Creating certs";
          echo -ne \
          "instances:\n"\
          "  - name: elasticsearch-node-a\n"\
          "    dns:\n"\
          "      - elasticsearch-node-a\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "  - name: elasticsearch-node-b\n"\
          "    dns:\n"\
          "      - elasticsearch-node-b\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip config/certs/certs.zip -d config/certs;
        fi;
        echo "Setting file permissions"
        chown -R root:root config/certs;
        chown -R 1000:root /usr/share/elasticsearch-node-a;
        chown -R 1000:root /usr/share/elasticsearch-node-b;
        find . -type d -exec chmod 750 \{\} \;;
        find . -type f -exec chmod 640 \{\} \;;
        chmod 644 config/certs/ca/ca.crt;
        chmod 755 config/certs;
        chmod 755 config/certs/ca;
        echo "Waiting for Elasticsearch availability";
        until curl -s --proxy false --cacert config/certs/ca/ca.crt https://elasticsearch-node-a:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
        echo "Setting kibana_system password";
        until curl -s --proxy false -X POST --cacert config/certs/ca/ca.crt -u elastic:${ELASTIC_PASSWORD:-!ChangeMe!} -H "Content-Type: application/json" https://elasticsearch-node-a:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD:-!ChangeMe!}\"}" | grep -q "^{}"; do sleep 10; done;
        echo "All done!";
      '
    volumes:
      - ${ES_DATA_PATH:-./storage/elasticsearch}-certs:/usr/share/elasticsearch/config/certs
      - ${ES_DATA_PATH:-./storage/elasticsearch}-node-a:/usr/share/elasticsearch-node-a
      - ${ES_DATA_PATH:-./storage/elasticsearch}-node-b:/usr/share/elasticsearch-node-b
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "[ -f config/certs/elasticsearch-node-a/elasticsearch-node-a.crt ]",
        ]
      interval: 1s
      timeout: 5s
      retries: 120

  elasticsearch-node-a:
    depends_on:
      - elasticsearch-setup
    image: elasticsearch:${ELASTIC_VERSION:-8.0.1}
    environment:
      - ES_SETTING_NODE_NAME=elasticsearch-node-a
      - ES_SETTING_BOOTSTRAP_MEMORY__LOCK=true
      - ES_SETTING_CLUSTER_NAME=${COMPOSE_PROJECT_NAME}-cluster
      - ES_SETTING_CLUSTER_INITIAL__MASTER__NODES=elasticsearch-node-a,elasticsearch-node-b
      - ES_SETTING_DISCOVERY_SEED__HOSTS=elasticsearch-node-b
      - ES_SETTING_INGEST_GEOIP_DOWNLOADER_ENABLED=false
      - ES_SETTING_XPACK_LICENSE_SELF__GENERATED_TYPE=basic
      - ES_SETTING_XPACK_SECURITY_ENABLED=true
      - ES_SETTING_XPACK_SECURITY_HTTP_SSL_ENABLED=true
      - ES_SETTING_XPACK_SECURITY_HTTP_SSL_KEY=certs/elasticsearch-node-a/elasticsearch-node-a.key
      - ES_SETTING_XPACK_SECURITY_HTTP_SSL_CERTIFICATE=certs/elasticsearch-node-a/elasticsearch-node-a.crt
      - ES_SETTING_XPACK_SECURITY_HTTP_SSL_CERTIFICATE__AUTHORITIES=certs/ca/ca.crt
      - ES_SETTING_XPACK_SECURITY_HTTP_SSL_VERIFICATION__MODE=certificate
      - ES_SETTING_XPACK_SECURITY_TRANSPORT_SSL_ENABLED=true
      - ES_SETTING_XPACK_SECURITY_TRANSPORT_SSL_KEY=certs/elasticsearch-node-a/elasticsearch-node-a.key
      - ES_SETTING_XPACK_SECURITY_TRANSPORT_SSL_CERTIFICATE=certs/elasticsearch-node-a/elasticsearch-node-a.crt
      - ES_SETTING_XPACK_SECURITY_TRANSPORT_SSL_CERTIFICATE__AUTHORITIES=certs/ca/ca.crt
      - ES_SETTING_XPACK_SECURITY_TRANSPORT_SSL_VERIFICATION__MODE=certificate
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-!ChangeMe!}
    volumes:
      - ${ES_DATA_PATH:-./storage/elasticsearch}-certs:/usr/share/elasticsearch/config/certs
      - ${ES_DATA_PATH:-./storage/elasticsearch}-node-a:/usr/share/elasticsearch/data
    deploy:
      resources:
        limits:
          cpus: ${ELASTIC_CPU_LIMIT:-0.50}
          memory: ${ELASTIC_MEMORY_LIMIT:-3072M}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
  elasticsearch-node-b:
    depends_on:
      - elasticsearch-node-a
    image: elasticsearch:${ELASTIC_VERSION:-8.0.1}
    environment:
      - ES_SETTING_NODE_NAME=elasticsearch-node-b
      - ES_SETTING_BOOTSTRAP_MEMORY__LOCK=true
      - ES_SETTING_CLUSTER_NAME=${COMPOSE_PROJECT_NAME}-cluster
      - ES_SETTING_CLUSTER_INITIAL__MASTER__NODES=elasticsearch-node-a,elasticsearch-node-b
      - ES_SETTING_DISCOVERY_SEED__HOSTS=elasticsearch-node-a
      - ES_SETTING_INGEST_GEOIP_DOWNLOADER_ENABLED=false
      - ES_SETTING_XPACK_LICENSE_SELF__GENERATED_TYPE=basic
      - ES_SETTING_XPACK_SECURITY_ENABLED=true
      - ES_SETTING_XPACK_SECURITY_HTTP_SSL_ENABLED=true
      - ES_SETTING_XPACK_SECURITY_HTTP_SSL_KEY=certs/elasticsearch-node-b/elasticsearch-node-b.key
      - ES_SETTING_XPACK_SECURITY_HTTP_SSL_CERTIFICATE=certs/elasticsearch-node-b/elasticsearch-node-b.crt
      - ES_SETTING_XPACK_SECURITY_HTTP_SSL_CERTIFICATE__AUTHORITIES=certs/ca/ca.crt
      - ES_SETTING_XPACK_SECURITY_HTTP_SSL_VERIFICATION__MODE=certificate
      - ES_SETTING_XPACK_SECURITY_TRANSPORT_SSL_ENABLED=true
      - ES_SETTING_XPACK_SECURITY_TRANSPORT_SSL_KEY=certs/elasticsearch-node-b/elasticsearch-node-b.key
      - ES_SETTING_XPACK_SECURITY_TRANSPORT_SSL_CERTIFICATE=certs/elasticsearch-node-b/elasticsearch-node-b.crt
      - ES_SETTING_XPACK_SECURITY_TRANSPORT_SSL_CERTIFICATE__AUTHORITIES=certs/ca/ca.crt
      - ES_SETTING_XPACK_SECURITY_TRANSPORT_SSL_VERIFICATION__MODE=certificate
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-!ChangeMe!}
    volumes:
      - ${ES_DATA_PATH:-./storage/elasticsearch}-certs:/usr/share/elasticsearch/config/certs
      - ${ES_DATA_PATH:-./storage/elasticsearch}-node-b:/usr/share/elasticsearch/data
    deploy:
      resources:
        limits:
          cpus: ${ELASTIC_CPU_LIMIT:-0.50}
          memory: ${ELASTIC_MEMORY_LIMIT:-3072M}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
  kibana:
    depends_on:
      elasticsearch-node-a:
        condition: service_healthy
      elasticsearch-node-b:
        condition: service_healthy
    image: kibana:${ELASTIC_VERSION:-8.0.1}
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=https://elasticsearch-node-a:9200
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD:-!ChangeMe!}
      - SERVER_PUBLICBASEURL=https://kibana.${COMPOSE_PROJECT_NAME}.localhost
      - TELEMETRY_ENABLED=false
    volumes:
      - ${ES_DATA_PATH:-./storage/elasticsearch}-certs:/usr/share/kibana/config/certs
    networks:
      - default
      - public
    deploy:
      resources:
        limits:
          cpus: ${ELASTIC_CPU_LIMIT:-0.50}
          memory: ${ELASTIC_MEMORY_LIMIT:-3072M}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
networks:
  public:
    name: ${EXTERNAL_NETWORK:-caddy}
    external: true
  default:
    driver: bridge
